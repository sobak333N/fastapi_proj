"""migration 3

Revision ID: 19f3bc5d70b1
Revises: 15ec96d7c480
Create Date: 2024-12-04 19:37:03.788023

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '19f3bc5d70b1'
down_revision: Union[str, None] = '15ec96d7c480'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('category_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('category_id')
    )
    op.create_table('course',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('instructor_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('course_name', sa.String(), nullable=True),
    sa.Column('cost', sa.Integer(), nullable=True),
    sa.Column('difficulty', sa.Enum('easy', 'medium', 'hard', name='difficulty'), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.category_id'], ),
    sa.ForeignKeyConstraint(['instructor_id'], ['instructors.instructor_id'], ),
    sa.PrimaryKeyConstraint('course_id')
    )
    op.create_table('lessons',
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('lesson_materials', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.course_id'], ),
    sa.PrimaryKeyConstraint('lesson_id')
    )
    op.create_table('student_course',
    sa.Column('student_course_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('payment_type', sa.Enum('card', 'sbp', name='paymenttype'), nullable=True),
    sa.Column('payment_status', sa.Enum('in_progress', 'done', 'pending', 'failed', 'cancelled', 'refunded', 'authorized', 'expired', 'processing', name='paymentstatus'), nullable=True),
    sa.Column('progress', sa.Float(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.course_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], ),
    sa.PrimaryKeyConstraint('student_course_id')
    )
    op.create_table('lesson_tasks',
    sa.Column('lesson_task_id', sa.Integer(), nullable=False),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(), nullable=False),
    sa.Column('task_type', sa.Enum('TEST', 'ASSIGNMENT', name='tasktypeenum'), nullable=False),
    sa.Column('answers', sa.String(), nullable=True),
    sa.Column('answer', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.lesson_id'], ),
    sa.PrimaryKeyConstraint('lesson_task_id')
    )
    op.create_table('student_lesson',
    sa.Column('student_lesson_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('lesson_id', sa.Integer(), nullable=False),
    sa.Column('done', sa.Boolean(), nullable=True),
    sa.Column('result', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['lesson_id'], ['lessons.lesson_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], ),
    sa.PrimaryKeyConstraint('student_lesson_id')
    )
    op.create_table('student_lesson_task',
    sa.Column('student_lesson_task_id', sa.Integer(), nullable=False),
    sa.Column('lesson_task_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.String(), nullable=False),
    sa.Column('correct', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['lesson_task_id'], ['lesson_tasks.lesson_task_id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], ),
    sa.PrimaryKeyConstraint('student_lesson_task_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('student_lesson_task')
    op.drop_table('student_lesson')
    op.drop_table('lesson_tasks')
    op.drop_table('student_course')
    op.drop_table('lessons')
    op.drop_table('course')
    op.drop_table('category')
    # ### end Alembic commands ###
